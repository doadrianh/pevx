name: Release Pipeline

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  run-tests:
    name: Test Python 3.12
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      
      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
          
      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          
      - name: Configure Poetry
        run: poetry config virtualenvs.in-project true
          
      - name: Cache Poetry virtualenv
        uses: actions/cache@v4
        with:
          path: .venv
          key: ${{ runner.os }}-poetry-3.12-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-3.12-
          
      - name: Install dependencies
        run: poetry install --no-interaction
          
      - name: Run tests with pytest
        run: poetry run pytest tests/

  create-release-and-publish:
    name: Create Release & Publish
    needs: run-tests
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    concurrency: 
      group: release-${{ github.ref }}
      cancel-in-progress: false
    permissions:
      contents: write  # For creating releases
      id-token: write  # For OIDC PyPI publishing
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for semantic-release
      
      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          
      - name: Configure Poetry
        run: poetry config virtualenvs.in-project true
      
      - name: Install python-semantic-release
        run: pip install python-semantic-release==9.21.0
          
      - name: Run Semantic Release
        id: release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |  
          VERSION_OUTPUT=$(semantic-release version)
          
          if echo "$VERSION_OUTPUT" | grep -q "[0-9]\+\.[0-9]\+\.[0-9]\+"; then
              VERSION=$(echo "$VERSION_OUTPUT" | grep -o '[0-9]\+\.[0-9]\+\.[0-9]\+' | head -n 1)
              echo "New version detected: $VERSION"
              echo "version=$VERSION" >> $GITHUB_OUTPUT
              echo "tag_created=true" >> $GITHUB_OUTPUT
              
              semantic-release publish
          else
              echo "No new version needed"
              echo "version=none" >> $GITHUB_OUTPUT
              echo "tag_created=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Build package
        if: steps.release.outputs.tag_created == 'true'
        run: poetry build
      
      - name: Publish to PyPI
        if: steps.release.outputs.tag_created == 'true'
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          skip-existing: true